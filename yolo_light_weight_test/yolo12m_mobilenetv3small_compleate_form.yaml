
# Parameters
nc: 80
depth_multiple: 0.50  # สามารถปรับค่านี้เพื่อทำให้โมเดลตื้นหรือลึกได้
width_multiple: 1.00   # สามารถปรับค่านี้เพื่อทำให้โมเดลแคบหรือกว้างได้
#   n: depth_multiple=0.50, width_multiple=0.25
#   s: depth_multiple=0.50, width_multiple=0.50
#   m: depth_multiple=0.50, width_multiple=1.00
#   l: depth_multiple=1.00, width_multiple=1.00
#   x: depth_multiple=1.00, width_multiple=1.50

# ----------------- 1. BACKBONE (MobileNetV2 Compatible) -----------------
# สร้างจากโมดูลมาตรฐานของ YOLO แต่เลียนแบบโครงสร้าง MobileNetV2
backbone:
  # [from, repeats, module, args]
  # args: [out_channels, kernel_size, stride]

  # Mimics Layer 0: Conv2dNormActivation -> Output: [16, 320, 320]
  - [-1, 1, Conv, [16, 3, 2]]   # Block 0: Halves the image size from 640 to 320.

  # Mimics Layer 1: InvertedResidual -> Output: [16, 160, 160]
  - [-1, 1, Conv, [16, 3, 2]]   # Block 1: Halves the image size from 320 to 160.

  # Mimics Layer 2: InvertedResidual -> Output: [24, 80, 80]
  - [-1, 1, Conv, [24, 3, 2]]   # Block 2: Halves the image size from 160 to 80. This is the P3 feature map.

  # Mimics Layer 3: InvertedResidual -> Output: [24, 80, 80]
  - [-1, 1, C2f, [24, True]]    # Block 3: Deep feature extraction at the same scale.

  # Mimics Layer 4: InvertedResidual -> Output: [40, 40, 40]
  - [-1, 1, Conv, [40, 3, 2]]   # Block 4: Halves the image size from 80 to 40.

  # Mimics Layer 5 & 6: InvertedResidual -> Output: [40, 40, 40]
  - [-1, 2, C2f, [40, True]]    # Block 5: Two repeats of C2f for deep feature extraction.

  # Mimics Layer 7 & 8: InvertedResidual -> Output: [48, 40, 40]
  - [-1, 1, Conv, [48, 1, 1]]   # Block 6: Pointwise Conv to increase channels from 40 to 48 without changing size.
  - [-1, 1, C2f, [48, True]]    # Block 7: Two repeats of C2f. This is the P4 feature map.

  # Mimics Layer 9: InvertedResidual -> Output: [96, 20, 20]
  - [-1, 1, Conv, [96, 3, 2]]   # Block 8: Halves the image size from 40 to 20.

  # Mimics Layer 10 & 11: InvertedResidual -> Output: [96, 20, 20]
  - [-1, 2, C2f, [96, True]]    # Block 9: Two repeats of C2f for deep feature extraction.

  # Mimics Layer 12: Conv2dNormActivation -> Output: [576, 20, 20]
  - [-1, 1, Conv, [576, 1, 1]]  # Block 10: Pointwise Conv for final channel expansion. This is the P5 feature map.

# ----------------- 2. NECK + HEAD -----------------
# YOLO12n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]          # Block 11
  - [[-1, 7], 1, Concat, [1]] # cat backbone P4         # Block 12
  - [-1, 2, A2C2f, [512, False, -1]]                    # Block 13

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]          # Block 14
  - [[-1, 3], 1, Concat, [1]] # cat backbone P3         # Block 15
  - [-1, 2, A2C2f, [256, False, -1]]                    # Block 16

  - [-1, 1, Conv, [256, 3, 2]]                          # Block 17
  - [[-1, 13], 1, Concat, [1]] # cat head P4            # Block 18
  - [-1, 2, A2C2f, [512, False, -1]]                    # Block 19

  - [-1, 1, Conv, [512, 3, 2]]                          # Block 20
  - [[-1, 10], 1, Concat, [1]] # cat head P5             # Block 21
  - [-1, 2, C3k2, [1024, True]] # 20 (P5/32-large)      # Block 22

  - [[16, 19, 22], 1, Detect, [nc]] # Detect(P3, P4, P5)# Block 23
